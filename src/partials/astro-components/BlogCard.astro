---
import { Image } from 'astro:assets';

import type { IMDX } from '@/types/imdx';
import { formatDate } from '@/utils/dates';

export interface Props {
  key: string | undefined;
  instance: IMDX;
}

const { key, instance } = Astro.props as Props;
const formattedDate = instance.pubDate ? formatDate(instance.pubDate) : null;
---

<a
  id={key}
  class="flex transform-gpu flex-col transition ease-out hover:scale-105 motion-reduce:transition-none motion-reduce:hover:transform-none"
  href={instance.url}
  target="_self"
>
  <div class="flex-1 overflow-hidden rounded-md bg-zinc-800">
    <div class="aspect-h-2 aspect-w-3 bg-zinc-200">
      {typeof instance.imgSrc === 'string' && (instance.imgSrc as string).includes('svg') ? (
        <img
          src={instance.imgSrc}
          alt={instance.imgAlt}
          class="h-full w-full object-scale-down object-center"
        />
      ) : (
        <Image
          class="h-full w-full object-cover object-center"
          src={instance.imgSrc}
          alt={instance.imgAlt}
          format="webp"
          width={400}
          height={267}
        />
      )}
    </div>

    <div class="px-3 pb-6 pt-4 text-center">
      <h2 class="text-xl font-semibold">
        {instance.title}
      </h2>

      {formattedDate && (
        <div class="mt-1 text-xs text-gray-400">{formattedDate}</div>
      )}

      <div class="mt-2 items-center text-sm">
        {instance.description}
      </div>
    </div>
  </div>
</a>
