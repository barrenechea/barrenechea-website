---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

import { AppConfig } from '~/config';
import { useTranslations } from '~/i18n/translations';
import Section from '~/partials/astro-components/Section.astro';
import { formatDate } from '~/utils/dates';

interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const { lang = AppConfig.defaultLang } = Astro.params;

const t = useTranslations(lang);
const formattedDate = `${t('projects.releasedOn')} ${formatDate(project.data.pubDate, lang)}`;
const translatedBy = project.data.translatedBy
  ? `${t('blog.translatedBy')} ${project.data.translatedBy}`
  : '';
---

<Section>
  <div
    class="relative mx-auto my-6 mt-16 w-full max-w-md min-w-0 rounded-xl bg-zinc-800 break-words shadow-lg md:max-w-2xl"
  >
    <div class="px-6">
      <div class="flex flex-wrap justify-center">
        <div class="flex w-full justify-center">
          <div class="relative">
            {
              project.data.img.format === 'svg' ? (
                <img
                  src={project.data.img.src}
                  alt={project.data.imgAlt}
                  class="-mt-16 size-36 rounded-full bg-zinc-200 object-scale-down p-3 ring-2 ring-gray-500"
                />
              ) : (
                <Image
                  src={project.data.img}
                  alt={project.data.imgAlt}
                  class="-mt-16 size-36 rounded-full bg-zinc-200 object-scale-down p-3 ring-2 ring-gray-500"
                  format="webp"
                  width={300}
                  height={300}
                />
              )
            }
          </div>
        </div>
        <div class="mt-16"></div>
      </div>
      <div class="mt-2 text-center">
        <h3 class="mb-1 text-2xl leading-normal font-bold text-zinc-200">
          {project.data.title}
        </h3>
        <div class="mt-0 mb-2 text-xs font-bold text-zinc-400 uppercase">
          {formattedDate}
        </div>
      </div>
      <div class="mt-6 border-t border-zinc-200 py-6 text-center">
        <div class="flex flex-wrap justify-center">
          <div class="w-full px-4">
            <p class="mb-4 leading-relaxed font-light text-zinc-300">
              {project.data.description}
            </p>
          </div>
        </div>
      </div>
      {
        project.data.link && (
          <div class="flex translate-y-4 justify-center space-x-2">
            <a
              href={project.data.link}
              target={project.data.link.startsWith('http') ? '_blank' : '_self'}
              class="inline-block rounded-sm bg-amber-400 px-6 py-2.5 text-xs leading-tight font-medium text-white uppercase shadow-md transition duration-150 ease-in-out hover:bg-amber-500 hover:shadow-lg focus:bg-amber-700 focus:shadow-lg focus:ring-0 focus:outline-hidden active:bg-amber-800 active:shadow-lg"
            >
              {t('projects.go')}
            </a>
          </div>
        )
      }
    </div>
  </div>

  <div class="mx-auto mt-5 max-w-prose">
    <div class="prose prose-invert prose-img:rounded-lg mt-8">
      <slot />
    </div>
    {
      translatedBy && (
        <div class="mt-12 text-right text-xs font-bold text-zinc-400 uppercase italic">
          {translatedBy}
        </div>
      )
    }
  </div>
</Section>
