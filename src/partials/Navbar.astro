---
import "./LogoAnimation.css";

import { AppConfig } from "~/config";
import socials from "~/constants/social";
import { useTranslations } from "~/i18n/translations";
import LanguageSelect from "~/partials/astro-components/LanguageSelect.astro";
import Logo from "~/partials/astro-components/Logo.astro";
import NavbarHeader from "~/partials/astro-components/NavbarHeader.astro";
import NavMenuItem from "~/partials/astro-components/NavMenuItem.astro";
import Section from "~/partials/astro-components/Section.astro";

const { lang = AppConfig.defaultLang } = Astro.params;
const t = useTranslations(lang);
---

<Section>
  <navbar-opener>
    <NavbarHeader>
      <a href={`/${lang}/`} target="_self">
        <Logo name={AppConfig.siteName}>
          <svg class="mr-1 size-10 stroke-amber-400" viewBox="0 0 48 48">
            <g id="top">
              <path
                class="top-anim"
                fill="none"
                stroke-miterlimit="10"
                stroke-width="2"
                d="M9.2,22.67V4.26h10.41c3.12,3.12,4.88,4.88,8,8v10.41H9.2z"
              ></path>
            </g>
            <g id="bottom">
              <path
                class="botton-anim"
                fill="none"
                stroke-miterlimit="10"
                stroke-width="2"
                d="M9.2,44.27V27.13h29.38v9.14c-3.12,3.12-4.88,4.88-8,8H9.2z"
              ></path>
            </g>
          </svg>
        </Logo>
      </a>
      <div
        class="flex items-center space-x-1 md:order-2 md:space-x-0 rtl:space-x-reverse"
      >
        <LanguageSelect />
        <button
          id="navbar-toggle"
          type="button"
          class="inline-flex size-10 items-center justify-center rounded-lg p-2 text-sm text-zinc-400 hover:bg-zinc-800 focus:outline-none focus:ring-2 focus:ring-zinc-600 md:hidden"
          aria-controls="navbar-main"
          aria-expanded="false"
        >
          <span class="sr-only">{t("nav.sr.open")}</span>
          <svg
            class="size-5"
            aria-hidden="true"
            fill="none"
            viewBox="0 0 17 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 1h15M1 7h15M1 13h15"></path>
          </svg>
        </button>
      </div>
      <div
        class="hidden w-full items-center justify-between md:order-1 md:flex md:w-auto"
        id="navbar-main"
      >
        <ul
          class="mt-4 flex flex-col rounded-lg border border-zinc-800 p-4 font-medium md:mt-0 md:flex-row md:space-x-8 md:border-0 md:p-0 rtl:space-x-reverse"
        >
          <NavMenuItem href={`/${lang}/`}>
            {t("nav.home")}
          </NavMenuItem>
          <NavMenuItem href={`/${lang}/projects/`}>
            {t("nav.projects")}
          </NavMenuItem>
          <NavMenuItem href={`/${lang}/posts/`}>
            {t("nav.posts")}
          </NavMenuItem>
          {
            socials.map(({ name, url }) => (
              <NavMenuItem href={url}>{name}</NavMenuItem>
            ))
          }
        </ul>
      </div>
    </NavbarHeader>
  </navbar-opener>
</Section>

<script>
  class NavbarOpener extends HTMLElement {
    constructor() {
      super();
      const toggleButton = this.querySelector("#navbar-toggle");
      const navbarMenu = this.querySelector("#navbar-main");

      toggleButton?.addEventListener("click", () => {
        navbarMenu?.classList.toggle("hidden");
        // set proper aria expanded attribute
        const expanded = toggleButton.getAttribute("aria-expanded") === "true";
        toggleButton.setAttribute("aria-expanded", `${!expanded}`);
      });
    }
  }

  customElements.define("navbar-opener", NavbarOpener);
</script>
