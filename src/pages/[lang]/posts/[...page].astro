---
import type { Page, PaginateFunction } from "astro";
import { type CollectionEntry } from "astro:content";

import { AppConfig } from "~/config";
import { postPages } from "~/content";
import { useTranslations } from "~/i18n/utils";
import BlogGallery from "~/partials/astro-components/BlogGallery.astro";
import Pagination from "~/partials/astro-components/Pagination.astro";
import PaginationHeader from "~/partials/astro-components/PaginationHeader.astro";
import Section from "~/partials/astro-components/Section.astro";
import Base from "~/templates/Base.astro";

type GetStaticPaths = {
  paginate: PaginateFunction;
};

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allPosts = postPages.filter(
    (item) => item.slug.split("/").length === 2
  );
  const sortedPosts = allPosts.sort(
    (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
  );
  const langs = ["en", "es"];

  // Return a paginated collection of paths for all posts
  return langs.flatMap((lang) => {
    const posts = sortedPosts.filter((item) => item.id.split("/")[0] === lang);
    return paginate(posts, {
      pageSize: 6,
      params: {
        lang,
      },
    });
  });
}

interface Props {
  page: Page<CollectionEntry<"posts">>;
}

const { page } = Astro.props as Props;
const { lang } = Astro.params;

const t = useTranslations(lang);
const titleBase = `${t("nav.page")} ${page.currentPage} - ${t("nav.posts")}`;
const title = `${titleBase} - ${AppConfig.siteName}`;
const description = t("posts.paginationDescription");
---

<Base head={{ title, description }}>
  <Section>
    <PaginationHeader title={t("nav.posts")} {description} />
  </Section>

  <Section>
    <BlogGallery postsList={page.data} />
  </Section>

  <Section>
    <Pagination page={page} />
  </Section>
</Base>
