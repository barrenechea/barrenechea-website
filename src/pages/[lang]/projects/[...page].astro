---
import type { Page, PaginateFunction } from 'astro';
import { type CollectionEntry } from 'astro:content';

import { AppConfig } from '~/config';
import { projectPages } from "~/content";
import BlogGallery from '~/partials/astro-components/BlogGallery.astro';
import Pagination from '~/partials/astro-components/Pagination.astro';
import PaginationHeader from '~/partials/astro-components/PaginationHeader.astro';
import Section from '~/partials/astro-components/Section.astro';
import Base from '~/templates/Base.astro';

type GetStaticPaths = {
  paginate: PaginateFunction;
};

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allProjects = projectPages.filter((item) => item.slug.split('/').length === 2);
  const sortedProjects = allProjects.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
  const langs = ['en', 'es'];

  // Return a paginated collection of paths for all projects
  return langs.flatMap((lang) => {
    const projects = sortedProjects.filter((item) => item.id.split('/')[0] === lang);
    return paginate(projects, {
      pageSize: 6,
      params: {
        lang,
      },
    });
  });
}

interface Props {
  page: Page<CollectionEntry<'projects'>>;
}

const { page } = Astro.props as Props;
const { lang = "en" } = Astro.params;
const titleBase = `Page ${page.currentPage} - Projects`;
const title = `${titleBase} - ${AppConfig.siteName}`;
const description =
  "Pagination of not necessarily everything I've done, but what I'm legally allowed to share ðŸ˜„";
---

<Base head={{ title, description, lang }}>
  <Section>
    <PaginationHeader title="Projects" description={description} />
  </Section>

  <Section>
    <BlogGallery postsList={page.data} />
  </Section>

  <Section>
    <Pagination page={page} />
  </Section>
</Base>
