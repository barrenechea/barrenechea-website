---
import type { Page, PaginateFunction } from 'astro';
import { type CollectionEntry,getCollection } from 'astro:content';

import BlogGallery from '@/partials/astro-components/BlogGallery.astro';
import Pagination from '@/partials/astro-components/Pagination.astro';
import PaginationHeader from '@/partials/astro-components/PaginationHeader.astro';
import Section from '@/partials/astro-components/Section.astro';
import Base from '@/templates/Base.astro';
import { AppConfig } from '@/utils/AppConfig';

type GetStaticPaths = {
  paginate: PaginateFunction;
};

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const allProjects = await getCollection('projects', (item) => item.slug.split('/').length === 1);
  const sortedProjects = allProjects.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

  // Return a paginated collection of paths for all projects
  return paginate(sortedProjects, { pageSize: 6 });
}

interface Props {
  page: Page<CollectionEntry<'projects'>>;
}

const { page } = Astro.props as Props;
const titleBase = `Page ${page.currentPage} - Projects`;
const title = `${titleBase} - ${AppConfig.siteName}`;
const description =
  "Pagination of not necessarily everything I've done, but what I'm legally allowed to share ðŸ˜„";
---

<Base head={{ title, description }}>
  <Section>
    <PaginationHeader title="Projects" description={description} />
  </Section>

  <Section>
    <BlogGallery postsList={page.data} />
  </Section>

  <Section>
    <Pagination page={page} />
  </Section>
</Base>
